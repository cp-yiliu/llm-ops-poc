# This GitHub workflow validates Bundle config (ML resource config and more)
# defined under myllmops/resources/*
# and myllmops/databricks.yml, when PRs are merged into the main branch
name: Bundle validation for myllmops

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'myllmops/**'

defaults:
  run:
    working-directory: ./myllmops/

env:
  STAGING_ARM_TENANT_ID: ${{ secrets.STAGING_AZURE_SP_TENANT_ID }}
  STAGING_ARM_CLIENT_ID: ${{ secrets.STAGING_AZURE_SP_APPLICATION_ID }}
  STAGING_ARM_CLIENT_SECRET: ${{ secrets.STAGING_AZURE_SP_CLIENT_SECRET }}
  PROD_ARM_TENANT_ID: ${{ secrets.PROD_AZURE_SP_TENANT_ID }}
  PROD_ARM_CLIENT_ID: ${{ secrets.PROD_AZURE_SP_APPLICATION_ID }}
  PROD_ARM_CLIENT_SECRET: ${{ secrets.PROD_AZURE_SP_CLIENT_SECRET }}

# permissions:
#   issues: write
#   pull-requests: write

jobs:
  staging:
    concurrency: myllmops-staging-bundle-job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - uses: databricks/setup-cli@v0.236.0
      - name: Validate Bundle For Staging
        id: validate
        env:
          ARM_TENANT_ID: ${{ env.STAGING_ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ env.STAGING_ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ env.STAGING_ARM_CLIENT_SECRET }}
          
        run: |
          databricks bundle validate -t staging > ../validate_output.txt
      - name: Create Comment with Bundle Configuration
        uses: actions/github-script@v7
        id: comment
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const fileContents = fs.readFileSync('validate_output.txt', 'utf8');
            const output = `#### Bundle Staging Config Validated ðŸ–Œ
            <details><summary>Staging Validation Output</summary>

            \`\`\`\n
            ${fileContents}
            \`\`\`

            </details>`

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  # prod:
  #   concurrency: myllmops-prod-bundle-job
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         ref: ${{ github.event.pull_request.head.sha || github.sha }}
  #     - uses: databricks/setup-cli@v0.236.0
  #     - name: Validate Bundle For Prod
  #       id: validate
  #       env:
  #         ARM_TENANT_ID: ${{ env.PROD_ARM_TENANT_ID }}
  #         ARM_CLIENT_ID: ${{ env.PROD_ARM_CLIENT_ID }}
  #         ARM_CLIENT_SECRET: ${{ env.PROD_ARM_CLIENT_SECRET }}
          
  #       run: |
  #         databricks bundle validate -t prod > ../validate_output.txt
  #     - name: Create Comment with Bundle Configuration
  #       uses: actions/github-script@v7
  #       id: comment
  #       with:
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         script: |
  #           const fs = require('fs');
  #           const fileContents = fs.readFileSync('validate_output.txt', 'utf8');
  #           const output = `#### Bundle Prod Config Validated ðŸ–Œ
  #           <details><summary>Prod Validation Output</summary>

  #           \`\`\`\n
  #           ${fileContents}
  #           \`\`\`

  #           </details>`

  #           github.rest.issues.createComment({
  #             issue_number: context.issue.number,
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             body: output
  #           })
